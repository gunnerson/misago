#!/bin/bash
# ".run" is an utility script that is called by main appctl
# to run certain actions inside Misago's docker container.

# Text styles
RED='\033[0;31m'
NORMAL=$(tput sgr0)

# Check if we are inside Misago's docker container
if [[ ! $IN_MISAGO_DOCKER = 1 ]]; then
    echo "This command can only be ran inside the running Misago docker container."
    echo
    exit 1
fi

# Utility functions used by action commands
error() {
    echo -e "${RED}Error:${NORMAL} $1"
    echo
    exit 1
}


wait_for_db() {
    export PGPASSWORD=$POSTGRES_PASSWORD
    RETRIES=10
    until psql -h $POSTGRES_HOST -U $POSTGRES_USER -d $POSTGRES_USER -c "select 1" > /dev/null 2>&1 || [ $RETRIES -eq 0 ]; do
        ((RETRIES--))
        sleep 2
    done
}

# Handle invalid argument
invalid_argument() {
    echo -e "Invalid argument: ${RED}$1${NORMAL}"
    echo
    exit 1
}

# Initialize default database
initialize_default_database() {
    wait_for_db
    echo "Migrating database"
    python manage.py migrate
    echo "Loading default avatar gallery"
    python manage.py loadavatargallery
    echo "Creating first superuser account"
    python manage.py createsuperuser
}

# Run psql connected to database
run_psql() {
    wait_for_db
    psql --username $POSTGRES_USER --host $POSTGRES_HOST $POSTGRES_USER
}

# Create new backup
create_backup() {
    if [[ ! $1 ]]; then
        echo -e "Missing argument: ${RED}backup_name${NORMAL}"
        echo
        exit 1
    fi
    backup=$1
    backup_tmp="/tmp/$backup"
    backup_archive="$backup.tar.gz"
    wait_for_db
    echo "Initializing backup $backup"
    mkdir $backup_tmp
    echo "Preparing database..."
    pg_dump -U $POSTGRES_USER -h $POSTGRES_HOST $POSTGRES_USER -Oxc > "$backup_tmp/database.sql"
    echo "Preparing media files..."
    cp -r /misago/media "$backup_tmp/media"
    echo "Archiving..."
    GZIP=-9
    cd "/tmp/"
    tar -zcf $backup_archive $backup
    echo "Cleaning up..."
    cd /misago/
    mv "/tmp/$backup_archive" "/misago/backups/$backup_archive"
    rm -rf $backup_tmp
    echo "New backup: $backup.tar.gz"
}

# Dump database to backups for upgrade script
prepare_v1_upgrade() {
    wait_for_db
    pg_dump -U $POSTGRES_USER -h $POSTGRES_HOST $POSTGRES_USER -Oxc > "/misago/backups/postgresql10.sql"
}

# Command dispatcher
if [[ $1 ]]; then
    if [[ $1 = "initialize_default_database" ]]; then
        initialize_default_database
    elif [[ $1 = "wait_for_db" ]]; then
        wait_for_db
    elif [[ $1 = "psql" ]]; then
        run_psql
    elif [[ $1 = "backup" ]]; then
        create_backup $2
    elif [[ $1 = "prepare_v1_upgrade" ]]; then
        prepare_v1_upgrade
    else
        invalid_argument $1
    fi
fi